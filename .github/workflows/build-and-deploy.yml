# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run Unit Test
      run: ./gradlew test

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build & Push Image
      uses: docker/build-push-action@v2
      with:
          context: .
          tags: ${{ github.sha }}

    - name: Set Up k8s - Digital Ocean
      uses: matootie/dokube@v1.3.4
      with:
        personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
        clusterName: k8s-customer-debts

    - name: Replace Tokens
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["./deployment/k8/deployment.yaml"]'
      env:
        service: ${{ secrets.SERVICE }}
        namespace: ${{ secrets.NAMESPACE }}
        env: ${{ secrets.ENVIRONMENT }}
        application-name: ${{ secrets.APPLICATION_NAME }}
        container-port: ${{ secrets.CONTAINER_PORT }}
        service-port: ${{ secrets.SERVICE_PORT }}
        replicas: ${{ secrets.REPLICAS }}
        image: ${{ secrets.IMAGE }}
        memory-request: ${{ secrets.MEMORY_REQUEST }}
        cpu-request: ${{ secrets.CPU_REQUEST }}
        memory-limits: ${{ secrets.MEMORY_LIMITS }}
        cpu-limits: ${{ secrets.CPU_LIMITS }}
        readinessProbe-path: ${{ secrets.READINESS_PROBE_PATH }}
        readinessProbe-port: ${{ secrets.READINESS_PROBE_PORT }}
        readinessProbe-periodSeconds: ${{ secrets.READINESS_PROBE_PERIOD_SECONDS }}
        readinessProbe-failureThreshold: ${{ secrets.READINESS_PROBE_FAILURE_THRESHOLD }}
        readinessProbe-timeoutSeconds: ${{ secrets.READINESS_PROBE_TIMEOUT_SECONDS }}
        readinessProbe-successThreshold: ${{ secrets.READINESS_PROBE_SUCCESS_THRESHOLD }}
        readinessProbe-initialDelaySeconds: ${{ secrets.READINESS_PROBE_INITIAL_DELAY_SECONDS }}
        livenessProbe-path: ${{ secrets.READINESS_PROBE_PATH }}
        livenessProbe-port: ${{ secrets.READINESS_PROBE_PORT }}
        livenessProbe-periodSeconds: ${{ secrets.READINESS_PROBE_PERIOD_SECONDS }}
        livenessProbe-failureThreshold: ${{ secrets.READINESS_PROBE_FAILURE_THRESHOLD }}
        livenessProbe-timeoutSeconds: ${{ secrets.READINESS_PROBE_TIMEOUT_SECONDS }}
        livenessProbe-successThreshold: ${{ secrets.READINESS_PROBE_SUCCESS_THRESHOLD }}
        livenessProbe-initialDelaySeconds: ${{ secrets.READINESS_PROBE_INITIAL_DELAY_SECONDS }}
        configmap: ${{ secrets.CONFIGMAP }}

    - name: Deploy
      run: kubectl apply -f ./deployment/k8/deployment.yaml
