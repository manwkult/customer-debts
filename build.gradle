buildscript {
	ext {
		springBootVersion = '2.2.7.RELEASE'
		springCloudVersion = 'Greenwich.M1'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {
	apply plugin: "java"
	apply plugin: "jacoco"
	repositories {
		mavenCentral()
	}
	jacoco {
		toolVersion = '0.8.5'
	}
}

subprojects {
  apply plugin: "java"
  apply plugin: "jacoco"
	dependencies {
		implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
		implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
		testCompile 'junit:junit:4.12'
	}

	jacocoTestReport {
		/*sourceSets sourceSets.main
		executionData.from = fileTree(buildDir).include("/jacoco/*.exec")*/
		reports {
			html.enabled = true
			xml.enabled = true
		}
	}
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
	dependsOn = subprojects.test
	additionalSourceDirs.from = files(subprojects.sourceSets.main.allSource.srcDirs)
	sourceDirectories.from = files(subprojects.sourceSets.main.allSource.srcDirs)
	classDirectories.from = files(subprojects.sourceSets.main.output)
	executionData.from = files(subprojects.jacocoTestReport.executionData)
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = false
	}
	onlyIf = {
		true
	}
	doFirst {
		executionData.from = files(executionData.findAll {
			it.exists()
		})
	}
}

apply from: './main.gradle'